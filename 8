Experiment No:8: NumPy Linear Algebra
Write a NumPy program using Linear Algebra â€“ inner, outer, cross, linalg.det, linalg.norm, inv, linalg.eig
8.a)To compute the inner, outer, cross product of two given vectors.
Aim: To compute the inner, outer, cross product of two given vectors.

Description:

Inner():
numpy.inner(arr1, arr2): Computes the inner product of two arrays.
Syntax:
numpy.inner(arr1, arr2)
outer():
numpy.outer() function compute the outer product of two vectors.
Syntax:
numpy.outer(a, b, out = None)
cross():
Return the cross product of two (arrays of) vectors.
Syntax: numpy.cross(a, b, axisa=-1, axisb=-1, axisc=-1, axis=None

Program:

import numpy as np
vector1=np.array([[1,2],[3,4]])
vector2=np.array([[5,6],[7,8]])
print("vector1:")
print(vector1)
print("vector2")
print(vector2)
print("inner product of the vectors")
print(np.inner(vector1,vector2))
print("outer product of the vectors")
print(np.outer(vector1,vector2))
print("cross product of the vectors")
print(np.cross(vector1,vector2))

output:
vector1:
[[1 2]
 [3 4]]
vector2
[[5 6]
 [7 8]]
inner product of the vectors
[[17 23]
 [39 53]]
outer product of the vectors
[[ 5  6  7  8]
 [10 12 14 16]
 [15 18 21 24]
 [20 24 28 32]]
cross product of the vectors
[-4 -4]


8.b) To compute the determinant of a given square array.
Aim: To compute the determinant of a given square array.

Description:

numpy.linalg.det() will take the given square array as a parameter and return the determinant of that.
Syntax: numpy.linalg.det() 
Parameter: An square array. 
Return: The determinant of that square array.

Program:
import numpy as np
from numpy import linalg as la
array=np.arange(1,5).reshape(2,2)
print("array:")
print(array)
print(np.linalg.det(array))

output:
array:
[[1 2]
 [3 4]]
-2.0000000000000004


8.C)To find a matrix or vector norm.
Aim:	To find a matrix or vector norm.

Description:

numpy.linalg.norm()
 To find a matrix or vector norm we use function numpy.linalg.norm() of Python library Numpy. This function returns one of the seven matrix norms or one of the infinite vector norms depending upon the value of its parameters.Returns either a vector or a matrix norm and if it is an integer value, it specifies the axis of x along which the vector norm will be computed .
 Syntax: numpy.linalg.norm(x, ord=None, axis=None)
Program:
import numpy as np
vector= np.arange(7)
print("vector")
print(vector)
result = np.linalg.norm(v)
print("Vector norm:")
print(result)
matrix= np.matrix('1, 2; 3, 4') 
print("matrix")
print(matrix)
result1 = np.linalg.norm(m)
print("Matrix norm:")
print(result1)
output:
vector 
[0 1 2 3 4 5 6] 
Vector norm:
9.539392014169456 
matrix 
[[1 2] 
[3 4]] 
Matrix norm: 
5.477225575051661





